//test return 1566
//1000th attractive number. See https://rosettacode.org/wiki/Attractive_numbers

bool isPrime(int n) {
    int d = 5;

    if (n < 2) {
        return false;
    }

    if (n % 2 == 0) {
        return n == 2;
    }

    if (n % 3 == 0) {
        return n == 3;
    }

    while (d * d <= n) {
        if (n % d == 0) return false;
        d += 2;
        if (n % d == 0) return false;
        d += 4;
    }
    return true;
}
 
int countPrimeFactors(int n) {
    int count = 0;
    int f = 2;

    if (n == 1) return 0;

    if (isPrime(n)) return 1;

    while (true) {
        if (n % f == 0) {
            count++;
            n /= f;
            if (n == 1) {
                return count;
            }
            if (isPrime(n)) {
                f = n;
            }
        } else {
            if (f >= 3) {
                f += 2;
            } else {
                f = 3;
            }
        }
    }

    return 0;
}
 
int main() {    
    int found = 0;
    int curr = 0;
    int res;

    while (found < 1000) {
        curr += 1;
        if (isPrime(countPrimeFactors(curr))) {
            found += 1;
        }
    }

    return curr;
}